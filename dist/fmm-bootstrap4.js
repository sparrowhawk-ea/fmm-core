import { __extends } from "tslib";
import { FmmFrameworkItemBase } from './fmm-utils';
// =================================================================================================================================
//						F M M B O O T S T R A P 4
// =================================================================================================================================
export var FmmBootstrap4 = {
    createFrameworkItem: function (_, e) {
        return e.tagName === 'INPUT' && ['checkbox', 'radio'].includes(e.type) ? G.Check : G.Other;
    }
};
// =================================================================================================================================
// =================================================================================================================================
// =================================================	P R I V A T E	============================================================
// =================================================================================================================================
// =================================================================================================================================
// =================================================================================================================================
//						F R A M E W O R K I T E M
// =================================================================================================================================
var FrameworkItem = /** @class */ (function (_super) {
    __extends(FrameworkItem, _super);
    // =============================================================================================================================
    function FrameworkItem(wrapperClass) {
        return _super.call(this, wrapperClass) || this;
    }
    // =============================================================================================================================
    FrameworkItem.prototype.getError = function (_, e, _n, _v) {
        if (!e.classList.contains('is-invalid') /* && !e.matches(':invalid')*/)
            return undefined;
        for (var s = e.nextElementSibling; s && s !== e; s = s.nextElementSibling) {
            if (s.classList.contains('invalid-feedback'))
                return s.textContent;
        }
        return undefined;
    };
    return FrameworkItem;
}(FmmFrameworkItemBase));
// =================================================================================================================================
//						G
// =================================================================================================================================
var G = {
    Check: new FrameworkItem('form-check'),
    Other: new FrameworkItem('form-group')
};
